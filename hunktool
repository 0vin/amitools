#!/usr/bin/env python2.7
#
# hunktool
#
# the swiss-army knife for Amiga Hunk executable file format
#
# written by Christian Vogelgsang (chris@vogelgsang.org)

import sys
import argparse
import pprint

from amitools.HunkScanner import HunkScanner
from amitools import Hunk

def print_pretty(data):
  pp = pprint.PrettyPrinter(indent=2)
  pp.pprint(data)

# ----- commands -----

class Validator:
  def __init__(self, args):
    self.counts = {}
    self.args = args

  def handle_file(self, path, hunk_file, error_code):
    if not self.counts.has_key(error_code):
      self.counts[error_code] = 0
    self.counts[error_code] += 1
    print path, error_code, hunk_file.error_string
    if args.dump:
      print_pretty(hunk_file.hunks)
  
  def result(self):
    for code in self.counts.keys():
      print Hunk.result_names[code],":",self.counts[code]
    return 0
  
# ----- main -----
parser = argparse.ArgumentParser()
#parser.add_argument('command')
parser.add_argument('hunkfiles', nargs='+')
parser.add_argument('-d', '--dump', action='store_true', default=False, help="dump the hunk structure")
parser.add_argument('-a', '--adf', action='store_true', default=False, help="enable adf scanner (requires adflib)")
args = parser.parse_args()

# call scanner and process all files with selected command
cmd = Validator(args)
scanner = HunkScanner(cmd.handle_file, use_adf=args.adf)
for path in args.hunkfiles:
  scanner.handle_path(path)
res = cmd.result()
sys.exit(res)
